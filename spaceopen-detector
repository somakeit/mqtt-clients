#!/usr/bin/env python

import paho.mqtt.client
import mqtt_config
import time
import RPi.GPIO as gpio

TOPIC = "somakeit/space/open"
POLL_TIME = 0.05 #seconds
IO_SWITCH = 11
IO_LED = 13

mqtt = paho.mqtt.client.Client(client_id=mqtt_config.client_id, clean_session=True)
mqtt.tls_set(("/etc/ssl/certs/ca-certificates.crt"))
mqtt.username_pw_set(mqtt_config.user_name, mqtt_config.password)
mqtt.loop_start()

def connect():
    while True:
        try:
            print "Connecting to: " + mqtt_config.server + ":" str(mqtt_config.port)
            mqtt.connect(mqtt_config.server, port=mqtt_config.port)
            break
        except Exception as e:
            print "failed to connecct: " + str(e)
            time.sleep(60)
            print "retrying.."
    mqtt.will_set('somakeit/space/open', payload='false', qos=1, retain=True)
    print "connected."
connect()

def on_disconnect(client, userdata, rc):
    print "reconnecting.."
    connect()

mqtt.on_connect = on_connect
mqtt.on_disconnect = on_disconnect

gpio.setmode(gpio.BOARD)
gpio.setup(IO_SWITCH, gpio.IN, pull_up_down=gpio.PUD_UP)
gpio.setup(IO_LED, gpio.OUT)
gpio.output(IO_LED, gpio.LOW)

if gpio.input(IO_SWITCH) == 1:
    open = False
    gpio.output(IO_LED, gpio.LOW)
    print "Space open at init"
    mqtt.publish(TOPIC, payload='0', qos=1, retain=True)
else:
    open = True
    gpio.output(IO_LED, gpio.HIGH)
    print "Space closed at init"
    mqtt.publish(TOPIC, payload='1', qos=1, retain=True)

while True:
    if open:
        if gpio.input(IO_SWITCH) == 1:
            open = False
            gpio.output(IO_LED, gpio.LOW)
            print "Space closed"
            mqtt.publish(TOPIC, payload='0', qos=1, retain=True)
    else:
        if gpio.input(IO_SWITCH) == 0:
            open = True
            gpio.output(IO_LED, gpio.HIGH)
            print "Space open"
            mqtt.publish(TOPIC, payload='1', qos=1, retain=True)

    time.sleep(POLL_TIME)
